MessageNotUnderstood: BoardWindow>>extent:label:24 April 2017 2:38:13.46638 pmVM: Mac OS - SmalltalkImage: Squeak5.1 [latest update: #16549]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /Users/Daniel/Documents/College/Object Oriented Dev/CalculationSolitareTrusted Dir /Users/Daniel/Library/Application Support/Squeak/Untrusted Dir /Users/Daniel/Documents/Squeak/BoardWindow(Object)>>doesNotUnderstand: #extent:label:	Receiver: a BoardWindow<Untitled Window>(1525625)	Arguments and temporary variables: 		aMessage: 	extent: 1280@720 label: 'Calc'		exception: 	MessageNotUnderstood: BoardWindow>>extent:label:		resumeValue: 	nil	Receiver's instance variables: 		bounds: 	0@0 corner: 300@200		owner: 	nil		submorphs: 	{a WasteImage(2059442) . a WasteImage(1652439) . a WasteImage(205653...etc...		fullBounds: 	nil		color: 	(Color r: 0.0 g: 0.7 b: 0.0)		extension: 	a MorphExtension (3193366) [other:  (allowPaneSplitters -> true) (la...etc...		borderWidth: 	1		borderColor: 	Color yellow		model: 	nil		slotName: 	nil		open: 	false		labelString: 	'Untitled Window'		stripes: 	{a RectangleMorph(3772005) . a RectangleMorph(3378429)}		label: 	a StringMorph(2970308)'Untitled Window'		closeBox: 	a SystemWindowButton(1361398)		collapseBox: 	a SystemWindowButton(1095219)		paneMorphs: 	#()		paneRects: 	nil		collapsedFrame: 	nil		fullFrame: 	nil		isCollapsed: 	false		isActive: 	nil		isLookingFocused: 	nil		menuBox: 	a SystemWindowButton(3307442)		mustNotClose: 	false		labelWidgetAllowance: 	83		updatablePanes: 	#()		allowReframeHandles: 	true		labelArea: 	an AlignmentMorph(3827265)		expandBox: 	a SystemWindowButton(997761)		deck: 	a DeckPile		foundation1: 	a FoundationPile		foundation2: 	a FoundationPile		foundation3: 	a FoundationPile		foundation4: 	a FoundationPile		waste1: 	a WastePile		waste2: 	a WastePile		waste3: 	a WastePile		waste4: 	a WastePile		highlight: 	nil		selectedCard: 	nilUndefinedObject>>DoIt	Receiver: nil	Arguments and temporary variables: 	Receiver's instance variables: nilCompiler>>evaluateCue:ifFail:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in Compiler>>evaluateCue:ifFail:logged:		methodNode: 	DoIt	board := BoardWindow new extent: 1280 @ 720 label: 'Calc'.	^...etc...		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(549088)")		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluateCue:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluate:in:to:notifying:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		textOrStream: 	a ReadStream		aContext: 	nil		receiver: 	nil		aRequestor: 	a SmalltalkEditor		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		theClass: 	UndefinedObject	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCue[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilBlockClosure>>on:do:	Receiver: [closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Arguments and temporary variables: 		exceptionOrExceptionSet: 	OutOfScopeNotification		handlerAction: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		handlerActive: 	true	Receiver's instance variables: 		outerContext: 	SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:		startpc: 	133		numArgs: 	0SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aBlock: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelection		result: 	nil		rcvr: 	nil		ctxt: 	nil	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>evaluateSelection	Receiver: a SmalltalkEditor	Arguments and temporary variables: 	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>doIt	Receiver: a SmalltalkEditor	Arguments and temporary variables: 	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>doIt:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aKeyboardEvent: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>dispatchOnKeyboardEvent:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aKeyboardEvent: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]		honorCommandKeys: 	true		typedChar: 	$d	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>keyStroke:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		anEvent: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 75 and rectangle 123@16 corner: 123@32...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(1 to: 74)		oldInterval: 	(75 to: 74)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nil[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:	Receiver: a TextMorphForEditView(146157)	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		bounds: 	0@0 corner: 408@34		owner: 	a TransformMorph(2808615)		submorphs: 	#()		fullBounds: 	0@0 corner: 408@34		color: 	Color black		extension: 	a MorphExtension (2646121) [other:  (caretColor -> Color red) (selec...etc...		borderWidth: 	0		borderColor: 	Color black		textStyle: 	a TextStyle Bitmap DejaVu Sans 9		text: 	a Text for 'board := BoardWindow new extent: 1280@720 label:''Calc''.boa...etc...		wrapFlag: 	true		paragraph: 	a NewParagraph		editor: 	a SmalltalkEditor		container: 	nil		predecessor: 	nil		successor: 	nil		backgroundColor: 	nil		margins: 	3@0 corner: 0@0		editHistory: 	nil		readOnly: 	false		autoFit: 	nil		editView: 	a PluggableTextMorphPlus(43874)		acceptOnCR: 	falseTextMorphForEditView(TextMorph)>>handleInteraction:fromEvent:	Receiver: a TextMorphForEditView(146157)	Arguments and temporary variables: 		interactionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke:...etc...		evt: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]		oldEditor: 	a SmalltalkEditor		oldParagraph: 	a NewParagraph		oldText: 	a Text for 'board := BoardWindow new extent: 1280@720 label:''Calc''....etc...	Receiver's instance variables: 		bounds: 	0@0 corner: 408@34		owner: 	a TransformMorph(2808615)		submorphs: 	#()		fullBounds: 	0@0 corner: 408@34		color: 	Color black		extension: 	a MorphExtension (2646121) [other:  (caretColor -> Color red) (selec...etc...		borderWidth: 	0		borderColor: 	Color black		textStyle: 	a TextStyle Bitmap DejaVu Sans 9		text: 	a Text for 'board := BoardWindow new extent: 1280@720 label:''Calc''.boa...etc...		wrapFlag: 	true		paragraph: 	a NewParagraph		editor: 	a SmalltalkEditor		container: 	nil		predecessor: 	nil		successor: 	nil		backgroundColor: 	nil		margins: 	3@0 corner: 0@0		editHistory: 	nil		readOnly: 	false		autoFit: 	nil		editView: 	a PluggableTextMorphPlus(43874)		acceptOnCR: 	falseTextMorphForEditView>>handleInteraction:fromEvent:	Receiver: a TextMorphForEditView(146157)	Arguments and temporary variables: 		interActionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke:...etc...		evt: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]	Receiver's instance variables: 		bounds: 	0@0 corner: 408@34		owner: 	a TransformMorph(2808615)		submorphs: 	#()		fullBounds: 	0@0 corner: 408@34		color: 	Color black		extension: 	a MorphExtension (2646121) [other:  (caretColor -> Color red) (selec...etc...		borderWidth: 	0		borderColor: 	Color black		textStyle: 	a TextStyle Bitmap DejaVu Sans 9		text: 	a Text for 'board := BoardWindow new extent: 1280@720 label:''Calc''.boa...etc...		wrapFlag: 	true		paragraph: 	a NewParagraph		editor: 	a SmalltalkEditor		container: 	nil		predecessor: 	nil		successor: 	nil		backgroundColor: 	nil		margins: 	3@0 corner: 0@0		editHistory: 	nil		readOnly: 	false		autoFit: 	nil		editView: 	a PluggableTextMorphPlus(43874)		acceptOnCR: 	false[] in TextMorphForEditView(TextMorph)>>keyStroke:	Receiver: a TextMorphForEditView(146157)	Arguments and temporary variables: 		evt: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]		action: 	nil	Receiver's instance variables: 		bounds: 	0@0 corner: 408@34		owner: 	a TransformMorph(2808615)		submorphs: 	#()		fullBounds: 	0@0 corner: 408@34		color: 	Color black		extension: 	a MorphExtension (2646121) [other:  (caretColor -> Color red) (selec...etc...		borderWidth: 	0		borderColor: 	Color black		textStyle: 	a TextStyle Bitmap DejaVu Sans 9		text: 	a Text for 'board := BoardWindow new extent: 1280@720 label:''Calc''.boa...etc...		wrapFlag: 	true		paragraph: 	a NewParagraph		editor: 	a SmalltalkEditor		container: 	nil		predecessor: 	nil		successor: 	nil		backgroundColor: 	nil		margins: 	3@0 corner: 0@0		editHistory: 	nil		readOnly: 	false		autoFit: 	nil		editView: 	a PluggableTextMorphPlus(43874)		acceptOnCR: 	falseStandardToolSet class>>codeCompletionAround:textMorph:keyStroke:	Receiver: StandardToolSet	Arguments and temporary variables: 		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:		aTextMorph: 	a TextMorphForEditView(146157)		evt: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]	Receiver's instance variables: 		superclass: 	Object		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	{CommandLineToolSet}		name: 	#StandardToolSet		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'Tools-Base'ToolSet class>>codeCompletionAround:textMorph:keyStroke:	Receiver: ToolSet	Arguments and temporary variables: 		aBlock: 	[closure] in TextMorphForEditView(TextMorph)>>keyStroke:		aTextMorph: 	a TextMorphForEditView(146157)		evt: 	[313@251 keystroke '<Cmd-d>' (100) 1240498]	Receiver's instance variables: 		superclass: 	AppRegistry		methodDict: 	a MethodDictionary()		format: 	0		instanceVariables: 	nil		organization: 	('as yet unclassified')		subclasses: 	nil		name: 	#ToolSet		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'System-Applications'		registeredClasses: 	an OrderedCollection(StandardToolSet CommandLineToolSet)		default: 	StandardToolSet--- The full stack ---BoardWindow(Object)>>doesNotUnderstand: #extent:label:UndefinedObject>>DoItCompiler>>evaluateCue:ifFail:Compiler>>evaluateCue:ifFail:logged:Compiler>>evaluate:in:to:notifying:ifFail:logged:[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:BlockClosure>>on:do:SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:SmalltalkEditor(TextEditor)>>evaluateSelectionSmalltalkEditor(TextEditor)>>doItSmalltalkEditor(TextEditor)>>doIt:SmalltalkEditor(TextEditor)>>dispatchOnKeyboardEvent:SmalltalkEditor(TextEditor)>>keyStroke:[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView(TextMorph)>>handleInteraction:fromEvent:TextMorphForEditView>>handleInteraction:fromEvent:[] in TextMorphForEditView(TextMorph)>>keyStroke:StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:ToolSet class>>codeCompletionAround:textMorph:keyStroke: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView>>keyStroke:TextMorphForEditView(Morph)>>handleKeystroke:TextMorphForEditView(TextMorph)>>handleKeystroke:KeyboardEvent>>sentTo:TextMorphForEditView(Morph)>>handleEvent:TextMorphForEditView(Morph)>>handleFocusEvent:MorphicEventDispatcher>>doHandlingForFocusEvent:with:MorphicEventDispatcher>>dispatchFocusEvent:with:TextMorphForEditView(Morph)>>processFocusEvent:using:TextMorphForEditView(Morph)>>processFocusEvent:[] in [] in [] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:KeyboardEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendKeyboardEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in MorphicProject>>spawnNewProcess[] in BlockClosure>>newProcess