NonBooleanReceiver: proceed for truth.24 April 2017 3:14:46.356785 pmVM: Mac OS - SmalltalkImage: Squeak5.1 [latest update: #16549]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /Users/Daniel/Documents/College/Object Oriented Dev/CalculationSolitareTrusted Dir /Users/Daniel/Library/Application Support/Squeak/Untrusted Dir /Users/Daniel/Documents/Squeak/FoundationPile(Object)>>mustBeBooleanIn:	Receiver: a FoundationPile	Arguments and temporary variables: 		context: 	BoardWindow>>cardMouseDown:		proceedValue: 	nil	Receiver's instance variables: 		cardStack: 	a Stack		pilePosition: 	500@50		multiple: 	1		expected: 	3FoundationPile(Object)>>mustBeBoolean	Receiver: a FoundationPile	Arguments and temporary variables: 	Receiver's instance variables: 		cardStack: 	a Stack		pilePosition: 	500@50		multiple: 	1		expected: 	3BoardWindow>>cardMouseDown:	Receiver: a BoardWindow<Calculation Solitare>(2182140)	Arguments and temporary variables: 		card: 	a Card(2995815)		addCardWasSuccess: 	a FoundationPile	Receiver's instance variables: 		bounds: 	153@18 corner: 1283@738		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	{a Card(240157) . a WasteImage(218249) . a WasteImage(2296600) . a WasteImage...etc...		fullBounds: 	nil		color: 	(Color r: 0.0 g: 0.7 b: 0.0)		extension: 	a MorphExtension (2971842) [other:  (layoutProperties -> a TableLayo...etc...		borderWidth: 	1		borderColor: 	(Color r: 0.0 g: 0.4 b: 0.0)		model: 	nil		slotName: 	nil		open: 	false		labelString: 	'Calculation Solitare'		stripes: 	{a RectangleMorph(1457259) . a RectangleMorph(1618310)}		label: 	a StringMorph(3070084)'Calculation Solitare'		closeBox: 	a SystemWindowButton(581333)		collapseBox: 	a SystemWindowButton(1930765)		paneMorphs: 	#()		paneRects: 	nil		collapsedFrame: 	nil		fullFrame: 	153@18 corner: 1283@738		isCollapsed: 	false		isActive: 	true		isLookingFocused: 	true		menuBox: 	a SystemWindowButton(3591686)		mustNotClose: 	false		labelWidgetAllowance: 	83		updatablePanes: 	#()		allowReframeHandles: 	true		labelArea: 	an AlignmentMorph(2558319)		expandBox: 	a SystemWindowButton(1864482)		deck: 	a DeckPile		foundation1: 	a FoundationPile		foundation2: 	a FoundationPile		foundation3: 	a FoundationPile		foundation4: 	a FoundationPile		waste1: 	a WastePile		waste2: 	a WastePile		waste3: 	a WastePile		waste4: 	a WastePile		highlight: 	nil		selectedCard: 	nilCard>>handlesMouseDown:	Receiver: a Card(2995815)	Arguments and temporary variables: 		evt: 	[750@211 mouseDown red ( red ) 3434197]	Receiver's instance variables: 		bounds: 	653@68 corner: 778@268		owner: 	a BoardWindow<Calculation Solitare>(2182140)		submorphs: 	#()		fullBounds: 	653@68 corner: 778@268		color: 	Color blue		extension: 	nil		image: 	Form(125x200x32)		faceValue: 	1		pile: 	a FoundationPileCard(Morph)>>handlerForMouseDown:	Receiver: a Card(2995815)	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]	Receiver's instance variables: 		bounds: 	653@68 corner: 778@268		owner: 	a BoardWindow<Calculation Solitare>(2182140)		submorphs: 	#()		fullBounds: 	653@68 corner: 778@268		color: 	Color blue		extension: 	nil		image: 	Form(125x200x32)		faceValue: 	1		pile: 	a FoundationPileMorphicEventDispatcher>>dispatchMouseDown:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		aMorph: 	a Card(2995815)		handler: 	nil		lastHandler: 	a BoardWindow<Calculation Solitare>(2182140)	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		aMorph: 	a Card(2995815)	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:Card(Morph)>>processEvent:using:	Receiver: a Card(2995815)	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		defaultDispatcher: 	a MorphicEventDispatcher		filteredEvent: 	[750@211 mouseDown red ( red ) 3434197]	Receiver's instance variables: 		bounds: 	653@68 corner: 778@268		owner: 	a BoardWindow<Calculation Solitare>(2182140)		submorphs: 	#()		fullBounds: 	653@68 corner: 778@268		color: 	Color blue		extension: 	nil		image: 	Form(125x200x32)		faceValue: 	1		pile: 	a FoundationPile[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:Array(SequenceableCollection)>>do:	Receiver: {a Card(240157) . a Highlight(694910) . a WasteImage(218249) . a WasteImage(2296600) . a WasteImage...etc...	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:		index: 	9		indexLimiT: 	20	Receiver's instance variables: {a Card(240157) . a Highlight(694910) . a WasteImage(218249) . a WasteImage(2296600) . a WasteImage...etc...BoardWindow(Morph)>>submorphsDo:	Receiver: a BoardWindow<Calculation Solitare>(2182140)	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver's instance variables: 		bounds: 	153@18 corner: 1283@738		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	{a Card(240157) . a WasteImage(218249) . a WasteImage(2296600) . a WasteImage...etc...		fullBounds: 	nil		color: 	(Color r: 0.0 g: 0.7 b: 0.0)		extension: 	a MorphExtension (2971842) [other:  (layoutProperties -> a TableLayo...etc...		borderWidth: 	1		borderColor: 	(Color r: 0.0 g: 0.4 b: 0.0)		model: 	nil		slotName: 	nil		open: 	false		labelString: 	'Calculation Solitare'		stripes: 	{a RectangleMorph(1457259) . a RectangleMorph(1618310)}		label: 	a StringMorph(3070084)'Calculation Solitare'		closeBox: 	a SystemWindowButton(581333)		collapseBox: 	a SystemWindowButton(1930765)		paneMorphs: 	#()		paneRects: 	nil		collapsedFrame: 	nil		fullFrame: 	153@18 corner: 1283@738		isCollapsed: 	false		isActive: 	true		isLookingFocused: 	true		menuBox: 	a SystemWindowButton(3591686)		mustNotClose: 	false		labelWidgetAllowance: 	83		updatablePanes: 	#()		allowReframeHandles: 	true		labelArea: 	an AlignmentMorph(2558319)		expandBox: 	a SystemWindowButton(1864482)		deck: 	a DeckPile		foundation1: 	a FoundationPile		foundation2: 	a FoundationPile		foundation3: 	a FoundationPile		foundation4: 	a FoundationPile		waste1: 	a WastePile		waste2: 	a WastePile		waste3: 	a WastePile		waste4: 	a WastePile		highlight: 	nil		selectedCard: 	nilMorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		aHandler: 	a BoardWindow<Calculation Solitare>(2182140)		aMorph: 	a BoardWindow<Calculation Solitare>(2182140)		result: 	nil		filteredEvent: 	nil	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:[] in MorphicEventDispatcher>>dispatchMouseDown:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:BlockClosure>>ensure:	Receiver: [closure] in MorphicEventDispatcher>>dispatchMouseDown:with:	Arguments and temporary variables: 		aBlock: 	[closure] in MorphicEventDispatcher>>dispatchMouseDown:with:		complete: 	nil		returnValue: 	nil	Receiver's instance variables: 		outerContext: 	MorphicEventDispatcher>>dispatchMouseDown:with:		startpc: 	102		numArgs: 	0MorphicEventDispatcher>>dispatchMouseDown:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		aMorph: 	a BoardWindow<Calculation Solitare>(2182140)		handler: 	a BoardWindow<Calculation Solitare>(2182140)		lastHandler: 	a PasteUpMorph(2434915) [world]	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		aMorph: 	a BoardWindow<Calculation Solitare>(2182140)	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:BoardWindow(Morph)>>processEvent:using:	Receiver: a BoardWindow<Calculation Solitare>(2182140)	Arguments and temporary variables: 		anEvent: 	[750@211 mouseDown red ( red ) 3434197]		defaultDispatcher: 	a MorphicEventDispatcher		filteredEvent: 	[750@211 mouseDown red ( red ) 3434197]	Receiver's instance variables: 		bounds: 	153@18 corner: 1283@738		owner: 	a PasteUpMorph(2434915) [world]		submorphs: 	{a Card(240157) . a WasteImage(218249) . a WasteImage(2296600) . a WasteImage...etc...		fullBounds: 	nil		color: 	(Color r: 0.0 g: 0.7 b: 0.0)		extension: 	a MorphExtension (2971842) [other:  (layoutProperties -> a TableLayo...etc...		borderWidth: 	1		borderColor: 	(Color r: 0.0 g: 0.4 b: 0.0)		model: 	nil		slotName: 	nil		open: 	false		labelString: 	'Calculation Solitare'		stripes: 	{a RectangleMorph(1457259) . a RectangleMorph(1618310)}		label: 	a StringMorph(3070084)'Calculation Solitare'		closeBox: 	a SystemWindowButton(581333)		collapseBox: 	a SystemWindowButton(1930765)		paneMorphs: 	#()		paneRects: 	nil		collapsedFrame: 	nil		fullFrame: 	153@18 corner: 1283@738		isCollapsed: 	false		isActive: 	true		isLookingFocused: 	true		menuBox: 	a SystemWindowButton(3591686)		mustNotClose: 	false		labelWidgetAllowance: 	83		updatablePanes: 	#()		allowReframeHandles: 	true		labelArea: 	an AlignmentMorph(2558319)		expandBox: 	a SystemWindowButton(1864482)		deck: 	a DeckPile		foundation1: 	a FoundationPile		foundation2: 	a FoundationPile		foundation3: 	a FoundationPile		foundation4: 	a FoundationPile		waste1: 	a WastePile		waste2: 	a WastePile		waste3: 	a WastePile		waste4: 	a WastePile		highlight: 	nil		selectedCard: 	nil[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:	Receiver: a MorphicEventDispatcher	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		lastType: 	#mouseDown		lastDispatch: 	#dispatchMouseDown:with:--- The full stack ---FoundationPile(Object)>>mustBeBooleanIn:FoundationPile(Object)>>mustBeBooleanBoardWindow>>cardMouseDown:Card>>handlesMouseDown:Card(Morph)>>handlerForMouseDown:MorphicEventDispatcher>>dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:Card(Morph)>>processEvent:using:[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:Array(SequenceableCollection)>>do:BoardWindow(Morph)>>submorphsDo:MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:[] in MorphicEventDispatcher>>dispatchMouseDown:with:BlockClosure>>ensure:MorphicEventDispatcher>>dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:BoardWindow(Morph)>>processEvent:using:[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -Array(SequenceableCollection)>>do:PasteUpMorph(Morph)>>submorphsDo:MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:[] in MorphicEventDispatcher>>dispatchMouseDown:with:BlockClosure>>ensure:MorphicEventDispatcher>>dispatchMouseDown:with:MorphicEventDispatcher>>dispatchEvent:with:PasteUpMorph(Morph)>>processEvent:using:[] in PasteUpMorph>>processEvent:using:BlockClosure>>ensure:PasteUpMorph>>processEvent:using:PasteUpMorph(Morph)>>processEvent:[] in [] in [] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:MouseButtonEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in MorphicProject>>spawnNewProcess[] in BlockClosure>>newProcess