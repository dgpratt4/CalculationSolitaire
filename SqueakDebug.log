MessageNotUnderstood: UndefinedObject>>binary26 April 2017 3:17:37.44836 pmVM: Mac OS - SmalltalkImage: Squeak5.1 [latest update: #16549]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /Users/Daniel/Documents/College/Object Oriented Dev/CalculationSolitareTrusted Dir /Users/Daniel/Library/Application Support/Squeak/Untrusted Dir /Users/Daniel/Documents/Squeak/UndefinedObject(Object)>>doesNotUnderstand: #binary	Receiver: nil	Arguments and temporary variables: 		aMessage: 	binary		exception: 	MessageNotUnderstood: UndefinedObject>>binary		resumeValue: 	nil	Receiver's instance variables: nilForm class>>fromFileNamed:	Receiver: Form	Arguments and temporary variables: 		fileName: 	'Assets\back.png'		file: 	nil		form: 	nil	Receiver's instance variables: 		superclass: 	DisplayMedium		methodDict: 	a MethodDictionary(size 236)		format: 	65541		instanceVariables: 	#('bits' 'width' 'height' 'depth' 'offset')		organization: 	('accessing' bits bitsSize bits: defaultCanvasClass depth depth: displayScreen...etc...		subclasses: 	{Cursor . ColorForm . StaticForm . FormStub . DisplayScreen}		name: 	#Form		classPool: 	a Dictionary()		sharedPools: 	nil		environment: 	nil		category: 	#'Graphics-Display Objects'DeckImage>>initialize	Receiver: a DeckImage(3369504)	Arguments and temporary variables: 	Receiver's instance variables: 		bounds: 	50@50 corner: 130@90		owner: 	nil		submorphs: 	#()		fullBounds: 	50@50 corner: 130@90		color: 	Color blue		extension: 	nil		image: 	Form(80x40x16)DeckImage class(Behavior)>>new	Receiver: DeckImage	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	ImageMorph		methodDict: 	a MethodDictionary(#initialize->(DeckImage>>#initialize "a CompiledMethod...etc...		format: 	65543		instanceVariables: 	nil		organization: 	('as yet unclassified' initialize)		subclasses: 	nil		name: 	#DeckImage		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'DeckPile>>initialize	Receiver: a DeckPile	Arguments and temporary variables: 	Receiver's instance variables: 		cardStack: 	a Stack		pilePosition: 	0@300		deckImage: 	nilDeckPile class(Behavior)>>new	Receiver: DeckPile	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	Pile		methodDict: 	a MethodDictionary(#addCard:->(DeckPile>>#addCard: "a CompiledMethod...etc...		format: 	65539		instanceVariables: 	#('deckImage')		organization: 	('as yet unclassified' addCard: deckImage initialize nextCard pilePosition:...etc...		subclasses: 	nil		name: 	#DeckPile		classPool: 	a Dictionary()		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'BoardWindow>>initialize	Receiver: a BoardWindow<Untitled Window>(3484979)	Arguments and temporary variables: 		tempArray: 	nil		count: 	nil		fndValues: 	nil		fndCards: 	nil		hintImage: 	nil		value: 	nil		suit: 	nil		index: 	nil		val: 	nil	Receiver's instance variables: 		bounds: 	0@0 corner: 300@200		owner: 	nil		submorphs: 	{an AlignmentMorph(2271415) . a TopLeftGripMorph(3318554) . a TopRightGripMorph...etc...		fullBounds: 	nil		color: 	(Color r: 0.0 g: 0.7 b: 0.0)		extension: 	a MorphExtension (3277840) [other:  (allowPaneSplitters -> true) (la...etc...		borderWidth: 	1		borderColor: 	Color yellow		model: 	nil		slotName: 	nil		open: 	false		labelString: 	'Untitled Window'		stripes: 	{a RectangleMorph(4140249) . a RectangleMorph(1668936)}		label: 	a StringMorph(2497554)'Untitled Window'		closeBox: 	a SystemWindowButton(3997303)		collapseBox: 	a SystemWindowButton(2505403)		paneMorphs: 	#()		paneRects: 	nil		collapsedFrame: 	nil		fullFrame: 	nil		isCollapsed: 	false		isActive: 	nil		isLookingFocused: 	nil		menuBox: 	a SystemWindowButton(3891668)		mustNotClose: 	false		labelWidgetAllowance: 	83		updatablePanes: 	#()		allowReframeHandles: 	true		labelArea: 	an AlignmentMorph(2271415)		expandBox: 	a SystemWindowButton(2546269)		deck: 	nil		foundation1: 	nil		foundation2: 	nil		foundation3: 	nil		foundation4: 	nil		waste1: 	nil		waste2: 	nil		waste3: 	nil		waste4: 	nil		highlight: 	nil		selectedCard: 	nilBoardWindow class(Behavior)>>new	Receiver: BoardWindow	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	SystemWindow		methodDict: 	a MethodDictionary(#attemptToMakeMoveOnBoard:->(BoardWindow>>#attem...etc...		format: 	65577		instanceVariables: 	#('deck' 'foundation1' 'foundation2' 'foundation3' 'foundati...etc...		organization: 	('as yet unclassified' attemptToMakeMoveOnBoard: cardMouseDown: defaultColor...etc...		subclasses: 	nil		name: 	#BoardWindow		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'		prototype: 	nilBoardWindow class(MorphicModel class)>>new	Receiver: BoardWindow	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	SystemWindow		methodDict: 	a MethodDictionary(#attemptToMakeMoveOnBoard:->(BoardWindow>>#attem...etc...		format: 	65577		instanceVariables: 	#('deck' 'foundation1' 'foundation2' 'foundation3' 'foundati...etc...		organization: 	('as yet unclassified' attemptToMakeMoveOnBoard: cardMouseDown: defaultColor...etc...		subclasses: 	nil		name: 	#BoardWindow		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'		prototype: 	nilGameManager>>startGame	Receiver: a GameManager	Arguments and temporary variables: 		resetbutton: 	nil	Receiver's instance variables: 		board: 	nilGameManager>>initialize	Receiver: a GameManager	Arguments and temporary variables: 	Receiver's instance variables: 		board: 	nilGameManager class(Behavior)>>new	Receiver: GameManager	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	Object		methodDict: 	a MethodDictionary(#initialize->(GameManager>>#initialize "a CompiledMethod...etc...		format: 	65537		instanceVariables: 	#('board')		organization: 	('as yet unclassified' initialize quitGame startGame)		subclasses: 	nil		name: 	#GameManager		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'UndefinedObject>>DoIt	Receiver: nil	Arguments and temporary variables: 	Receiver's instance variables: nilCompiler>>evaluateCue:ifFail:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in Compiler>>evaluateCue:ifFail:logged:		methodNode: 	DoIt	^ gameManager := GameManager new		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(2446679)")		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluateCue:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluate:in:to:notifying:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		textOrStream: 	a ReadStream		aContext: 	nil		receiver: 	nil		aRequestor: 	a SmalltalkEditor		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		theClass: 	UndefinedObject	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCue[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $g and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 32 and rectangle 231@0 corner: 231@16 ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(17 to: 16)		oldInterval: 	(32 to: 31)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilBlockClosure>>on:do:	Receiver: [closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Arguments and temporary variables: 		exceptionOrExceptionSet: 	OutOfScopeNotification		handlerAction: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		handlerActive: 	true	Receiver's instance variables: 		outerContext: 	SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:		startpc: 	133		numArgs: 	0SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aBlock: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelection		result: 	nil		rcvr: 	nil		ctxt: 	nil	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $g and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 32 and rectangle 231@0 corner: 231@16 ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(17 to: 16)		oldInterval: 	(32 to: 31)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nil--- The full stack ---UndefinedObject(Object)>>doesNotUnderstand: #binaryForm class>>fromFileNamed:DeckImage>>initializeDeckImage class(Behavior)>>newDeckPile>>initializeDeckPile class(Behavior)>>newBoardWindow>>initializeBoardWindow class(Behavior)>>newBoardWindow class(MorphicModel class)>>newGameManager>>startGameGameManager>>initializeGameManager class(Behavior)>>newUndefinedObject>>DoItCompiler>>evaluateCue:ifFail:Compiler>>evaluateCue:ifFail:logged:Compiler>>evaluate:in:to:notifying:ifFail:logged:[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:BlockClosure>>on:do:SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -SmalltalkEditor(TextEditor)>>evaluateSelectionSmalltalkEditor(TextEditor)>>doItSmalltalkEditor(TextEditor)>>doIt:SmalltalkEditor(TextEditor)>>dispatchOnKeyboardEvent:SmalltalkEditor(TextEditor)>>keyStroke:[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView(TextMorph)>>handleInteraction:fromEvent:TextMorphForEditView>>handleInteraction:fromEvent:[] in TextMorphForEditView(TextMorph)>>keyStroke:StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:ToolSet class>>codeCompletionAround:textMorph:keyStroke:TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView>>keyStroke:TextMorphForEditView(Morph)>>handleKeystroke:TextMorphForEditView(TextMorph)>>handleKeystroke:KeyboardEvent>>sentTo:TextMorphForEditView(Morph)>>handleEvent:TextMorphForEditView(Morph)>>handleFocusEvent:MorphicEventDispatcher>>doHandlingForFocusEvent:with:MorphicEventDispatcher>>dispatchFocusEvent:with:TextMorphForEditView(Morph)>>processFocusEvent:using:TextMorphForEditView(Morph)>>processFocusEvent:[] in [] in [] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:KeyboardEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendFocusEvent:to:clear:BlockClosure>>ensure:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendKeyboardEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor:Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle-- and more not shown --