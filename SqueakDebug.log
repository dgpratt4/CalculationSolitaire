MessageNotUnderstood: Card>>getFaceValue24 April 2017 6:30:12.09528 pmVM: Mac OS - SmalltalkImage: Squeak5.1 [latest update: #16549]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /Users/Daniel/Documents/College/Object Oriented Dev/CalculationSolitareTrusted Dir /Users/Daniel/Library/Application Support/Squeak/Untrusted Dir /Users/Daniel/Documents/Squeak/Card(Object)>>doesNotUnderstand: #getFaceValue	Receiver: a Card(2190538)	Arguments and temporary variables: 		aMessage: 	getFaceValue		exception: 	MessageNotUnderstood: Card>>getFaceValue		resumeValue: 	nil	Receiver's instance variables: 		bounds: 	200@50 corner: 325@250		owner: 	nil		submorphs: 	#()		fullBounds: 	nil		color: 	Color blue		extension: 	nil		image: 	Form(125x200x32)		faceValue: 	1		pile: 	nilFoundationPile>>addCard:	Receiver: a FoundationPile	Arguments and temporary variables: 		aCard: 	a Card(2190538)	Receiver's instance variables: 		cardStack: 	a Stack		pilePosition: 	500@50		multiple: 	1		expected: 	1BoardWindow>>initialize	Receiver: a BoardWindow<Untitled Window>(3471217)	Arguments and temporary variables: 		tempArray: 	{a Card(2190538) . a Card(702062) . a Card(982033) . a Card(447643) ...etc...		count: 	53		fndValues: 	#(nil nil nil nil)		fndCards: 	{a Card(2190538) . a Card(982033) . a Card(1730583) . a Card(2609797)...etc...		value: 	14		suit: 	5		index: 	53		val: 	6	Receiver's instance variables: 		bounds: 	0@0 corner: 300@200		owner: 	nil		submorphs: 	{a Card(359490) . a DeckImage(2153821) . an AlignmentMorph(2431279) ...etc...		fullBounds: 	nil		color: 	(Color r: 0.0 g: 0.7 b: 0.0)		extension: 	a MorphExtension (1599736) [other:  (allowPaneSplitters -> true) (la...etc...		borderWidth: 	1		borderColor: 	Color yellow		model: 	nil		slotName: 	nil		open: 	false		labelString: 	'Untitled Window'		stripes: 	{a RectangleMorph(1438691) . a RectangleMorph(4116633)}		label: 	a StringMorph(3209502)'Untitled Window'		closeBox: 	a SystemWindowButton(3355926)		collapseBox: 	a SystemWindowButton(2245545)		paneMorphs: 	#()		paneRects: 	nil		collapsedFrame: 	nil		fullFrame: 	nil		isCollapsed: 	false		isActive: 	nil		isLookingFocused: 	nil		menuBox: 	a SystemWindowButton(2027140)		mustNotClose: 	false		labelWidgetAllowance: 	83		updatablePanes: 	#()		allowReframeHandles: 	true		labelArea: 	an AlignmentMorph(2431279)		expandBox: 	a SystemWindowButton(222383)		deck: 	a DeckPile		foundation1: 	a FoundationPile		foundation2: 	nil		foundation3: 	nil		foundation4: 	nil		waste1: 	nil		waste2: 	nil		waste3: 	nil		waste4: 	nil		highlight: 	nil		selectedCard: 	nilBoardWindow class(Behavior)>>new	Receiver: BoardWindow	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	SystemWindow		methodDict: 	a MethodDictionary(#attemptToMakeMoveOnBoard:->(BoardWindow>>#attem...etc...		format: 	65577		instanceVariables: 	#('deck' 'foundation1' 'foundation2' 'foundation3' 'foundati...etc...		organization: 	('as yet unclassified' attemptToMakeMoveOnBoard: cardMouseDown: defaultColor...etc...		subclasses: 	nil		name: 	#BoardWindow		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'		prototype: 	nilBoardWindow class(MorphicModel class)>>new	Receiver: BoardWindow	Arguments and temporary variables: 	Receiver's instance variables: 		superclass: 	SystemWindow		methodDict: 	a MethodDictionary(#attemptToMakeMoveOnBoard:->(BoardWindow>>#attem...etc...		format: 	65577		instanceVariables: 	#('deck' 'foundation1' 'foundation2' 'foundation3' 'foundati...etc...		organization: 	('as yet unclassified' attemptToMakeMoveOnBoard: cardMouseDown: defaultColor...etc...		subclasses: 	nil		name: 	#BoardWindow		classPool: 	nil		sharedPools: 	nil		environment: 	Smalltalk		category: 	#'CS-Objects'		prototype: 	nilUndefinedObject>>DoIt	Receiver: nil	Arguments and temporary variables: 	Receiver's instance variables: nilCompiler>>evaluateCue:ifFail:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in Compiler>>evaluateCue:ifFail:logged:		methodNode: 	DoIt	board := BoardWindow new extent: 1280 @ 720;				 setLabel: '...etc...		method: 	(UndefinedObject>>#DoIt "a CompiledMethod(3964862)")		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluateCue:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		aCue: 	a CompilationCue		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		value: 	nil	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCueCompiler>>evaluate:in:to:notifying:ifFail:logged:	Receiver: a Compiler	Arguments and temporary variables: 		textOrStream: 	a ReadStream		aContext: 	nil		receiver: 	nil		aRequestor: 	a SmalltalkEditor		failBlock: 	[closure] in [] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		logFlag: 	true		theClass: 	UndefinedObject	Receiver's instance variables: 		parser: 	a Parser		cue: 	a CompilationCue[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilBlockClosure>>on:do:	Receiver: [closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Arguments and temporary variables: 		exceptionOrExceptionSet: 	OutOfScopeNotification		handlerAction: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:...etc...		handlerActive: 	true	Receiver's instance variables: 		outerContext: 	SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:		startpc: 	133		numArgs: 	0SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aBlock: 	[closure] in SmalltalkEditor(TextEditor)>>evaluateSelection		result: 	nil		rcvr: 	nil		ctxt: 	nil	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>evaluateSelection	Receiver: a SmalltalkEditor	Arguments and temporary variables: 	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>doIt	Receiver: a SmalltalkEditor	Arguments and temporary variables: 	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>doIt:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aKeyboardEvent: 	[308@213 keystroke '<Cmd-d>' (100) 2701858]	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>dispatchOnKeyboardEvent:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		aKeyboardEvent: 	[308@213 keystroke '<Cmd-d>' (100) 2701858]		honorCommandKeys: 	true		typedChar: 	$d	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nilSmalltalkEditor(TextEditor)>>keyStroke:	Receiver: a SmalltalkEditor	Arguments and temporary variables: 		anEvent: 	[308@213 keystroke '<Cmd-d>' (100) 2701858]	Receiver's instance variables: 		morph: 	a TextMorphForEditView(146157)		selectionShowing: 	false		model: 	a Workspace		paragraph: 	a NewParagraph		markBlock: 	a CharacterBlock with index 1 and character $b and rectangle 3@0 cor...etc...		pointBlock: 	a CharacterBlock with index 94 and rectangle 3@48 corner: 3@64 in ...etc...		beginTypeInIndex: 	nil		emphasisHere: 	{a TextFontChange font: 1}		lastParenLocation: 	nil		otherInterval: 	(3 to: 92)		oldInterval: 	(94 to: 93)		typeAhead: 	a WriteStream		history: 	a TextEditorCommandHistory		styler: 	nil[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:	Receiver: a TextMorphForEditView(146157)	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		bounds: 	0@0 corner: 408@66		owner: 	a TransformMorph(2808615)		submorphs: 	#()		fullBounds: 	0@0 corner: 408@66		color: 	Color black		extension: 	a MorphExtension (2646121) [other:  (caretColor -> Color red) (selec...etc...		borderWidth: 	0		borderColor: 	Color black		textStyle: 	a TextStyle Bitmap DejaVu Sans 9		text: 	a Text for 'board := BoardWindow new extent: 1280@720; setLabel: ''Calcul...etc...		wrapFlag: 	true		paragraph: 	a NewParagraph		editor: 	a SmalltalkEditor		container: 	nil		predecessor: 	nil		successor: 	nil		backgroundColor: 	nil		margins: 	3@0 corner: 0@0		editHistory: 	nil		readOnly: 	false		autoFit: 	nil		editView: 	a PluggableTextMorphPlus(43874)		acceptOnCR: 	falseTextMorphForEditView(TextMorph)>>handleInteraction:fromEvent:	Receiver: a TextMorphForEditView(146157)	Arguments and temporary variables: 		interactionBlock: 	[closure] in [] in TextMorphForEditView(TextMorph)>>keyStroke:...etc...		evt: 	[308@213 keystroke '<Cmd-d>' (100) 2701858]		oldEditor: 	a SmalltalkEditor		oldParagraph: 	a NewParagraph		oldText: 	a Text for 'board := BoardWindow new extent: 1280@720; setLabel: ''Cal...etc...	Receiver's instance variables: 		bounds: 	0@0 corner: 408@66		owner: 	a TransformMorph(2808615)		submorphs: 	#()		fullBounds: 	0@0 corner: 408@66		color: 	Color black		extension: 	a MorphExtension (2646121) [other:  (caretColor -> Color red) (selec...etc...		borderWidth: 	0		borderColor: 	Color black		textStyle: 	a TextStyle Bitmap DejaVu Sans 9		text: 	a Text for 'board := BoardWindow new extent: 1280@720; setLabel: ''Calcul...etc...		wrapFlag: 	true		paragraph: 	a NewParagraph		editor: 	a SmalltalkEditor		container: 	nil		predecessor: 	nil		successor: 	nil		backgroundColor: 	nil		margins: 	3@0 corner: 0@0		editHistory: 	nil		readOnly: 	false		autoFit: 	nil		editView: 	a PluggableTextMorphPlus(43874)		acceptOnCR: 	false--- The full stack ---Card(Object)>>doesNotUnderstand: #getFaceValueFoundationPile>>addCard:BoardWindow>>initializeBoardWindow class(Behavior)>>newBoardWindow class(MorphicModel class)>>newUndefinedObject>>DoItCompiler>>evaluateCue:ifFail:Compiler>>evaluateCue:ifFail:logged:Compiler>>evaluate:in:to:notifying:ifFail:logged:[] in SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:BlockClosure>>on:do:SmalltalkEditor(TextEditor)>>evaluateSelectionAndDo:SmalltalkEditor(TextEditor)>>evaluateSelectionSmalltalkEditor(TextEditor)>>doItSmalltalkEditor(TextEditor)>>doIt:SmalltalkEditor(TextEditor)>>dispatchOnKeyboardEvent:SmalltalkEditor(TextEditor)>>keyStroke:[] in [] in TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView(TextMorph)>>handleInteraction:fromEvent: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -TextMorphForEditView>>handleInteraction:fromEvent:[] in TextMorphForEditView(TextMorph)>>keyStroke:StandardToolSet class>>codeCompletionAround:textMorph:keyStroke:ToolSet class>>codeCompletionAround:textMorph:keyStroke:TextMorphForEditView(TextMorph)>>keyStroke:TextMorphForEditView>>keyStroke:PluggableTextMorphPlus(Morph)>>handleKeystroke:KeyboardEvent>>sentTo:PluggableTextMorphPlus(Morph)>>handleEvent:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:PluggableTextMorphPlus(Morph)>>processEvent:using:[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:Array(SequenceableCollection)>>do:PluggableSystemWindow(Morph)>>submorphsDo:MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:PluggableSystemWindow(Morph)>>processEvent:using:[] in MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:Array(SequenceableCollection)>>do:PasteUpMorph(Morph)>>submorphsDo:MorphicEventDispatcher>>dispatchEvent:toSubmorphsOf:MorphicEventDispatcher>>dispatchEvent:withHandler:withMorph:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:PasteUpMorph(Morph)>>processEvent:using:[] in PasteUpMorph>>processEvent:using:BlockClosure>>ensure:PasteUpMorph>>processEvent:using:PasteUpMorph(Morph)>>processEvent:[] in [] in [] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:KeyboardEvent(MorphicEvent)>>becomeActiveDuring:[] in [] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:HandMorph>>becomeActiveDuring:[] in HandMorph>>sendEvent:focus:clear:BlockClosure>>ensure:PasteUpMorph>>becomeActiveDuring:-- and more not shown --